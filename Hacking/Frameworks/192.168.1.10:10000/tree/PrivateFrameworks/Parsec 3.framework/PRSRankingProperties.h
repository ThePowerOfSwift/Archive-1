/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Parsec.framework/Parsec
 */

@interface PRSRankingProperties : NSObject <NSCopying, NSSecureCoding> {
    NSString * _albumName;
    NSArray * _alternateNames;
    NSString * _authors;
    NSString * _contentType;
    long long  _countOfRecentNSUserActivity;
    bool  _csContinuationSupported;
    bool  _doesAppSupportCS;
    NSString * _domainIdentifier;
    bool  _hasRecentNSUserActivity;
    long long  _incomingCount;
    NSDate * _interestingDate;
    bool  _isCoreSpotlight;
    bool  _isNSUserActivityResult;
    NSArray * _keywords;
    NSDate * _lastUsedDate;
    NSNumber * _latitude;
    NSNumber * _longitude;
    double  _modelScore;
    long long  _outgoingCount;
    NSArray * _recipients;
    NSArray * _resultLanguages;
    NSString * _shortcut;
    NSString * _snippet;
    NSString * _subject;
    double  _textMatchQualityScore;
    NSString * _title;
    long long  _totalUseCount;
    NSArray * _whereFroms;
}

@property (nonatomic, retain) NSString *albumName;
@property (nonatomic, retain) NSArray *alternateNames;
@property (nonatomic, retain) NSString *authors;
@property (nonatomic, retain) NSString *contentType;
@property (nonatomic) long long countOfRecentNSUserActivity;
@property bool csContinuationSupported;
@property bool doesAppSupportCS;
@property (nonatomic, retain) NSString *domainIdentifier;
@property bool hasRecentNSUserActivity;
@property (nonatomic) long long incomingCount;
@property (nonatomic, retain) NSDate *interestingDate;
@property bool isCoreSpotlight;
@property bool isNSUserActivityResult;
@property (nonatomic, retain) NSArray *keywords;
@property (nonatomic, retain) NSDate *lastUsedDate;
@property (nonatomic, retain) NSNumber *latitude;
@property (nonatomic, retain) NSNumber *longitude;
@property (nonatomic) double modelScore;
@property (nonatomic) long long outgoingCount;
@property (nonatomic, retain) NSArray *recipients;
@property (nonatomic, retain) NSArray *resultLanguages;
@property (nonatomic, retain) NSString *shortcut;
@property (nonatomic, retain) NSString *snippet;
@property (nonatomic, retain) NSString *subject;
@property (nonatomic) double textMatchQualityScore;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) long long totalUseCount;
@property (nonatomic, retain) NSArray *whereFroms;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)albumName;
- (id)alternateNames;
- (id)authors;
- (id)contentType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)countOfRecentNSUserActivity;
- (bool)csContinuationSupported;
- (bool)doesAppSupportCS;
- (id)domainIdentifier;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasRecentNSUserActivity;
- (long long)incomingCount;
- (id)initWithCoder:(id)arg1;
- (id)interestingDate;
- (bool)isCoreSpotlight;
- (bool)isNSUserActivityResult;
- (id)keywords;
- (id)lastUsedDate;
- (id)latitude;
- (id)longitude;
- (double)modelScore;
- (long long)outgoingCount;
- (id)recipients;
- (id)resultLanguages;
- (void)setAlbumName:(id)arg1;
- (void)setAlternateNames:(id)arg1;
- (void)setAuthors:(id)arg1;
- (void)setContentType:(id)arg1;
- (void)setCountOfRecentNSUserActivity:(long long)arg1;
- (void)setCsContinuationSupported:(bool)arg1;
- (void)setDoesAppSupportCS:(bool)arg1;
- (void)setDomainIdentifier:(id)arg1;
- (void)setHasRecentNSUserActivity:(bool)arg1;
- (void)setIncomingCount:(long long)arg1;
- (void)setInterestingDate:(id)arg1;
- (void)setIsCoreSpotlight:(bool)arg1;
- (void)setIsNSUserActivityResult:(bool)arg1;
- (void)setKeywords:(id)arg1;
- (void)setLastUsedDate:(id)arg1;
- (void)setLatitude:(id)arg1;
- (void)setLongitude:(id)arg1;
- (void)setModelScore:(double)arg1;
- (void)setOutgoingCount:(long long)arg1;
- (void)setRecipients:(id)arg1;
- (void)setResultLanguages:(id)arg1;
- (void)setShortcut:(id)arg1;
- (void)setSnippet:(id)arg1;
- (void)setSubject:(id)arg1;
- (void)setTextMatchQualityScore:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setTotalUseCount:(long long)arg1;
- (void)setWhereFroms:(id)arg1;
- (id)shortcut;
- (id)snippet;
- (id)subject;
- (double)textMatchQualityScore;
- (id)title;
- (long long)totalUseCount;
- (id)whereFroms;

@end
